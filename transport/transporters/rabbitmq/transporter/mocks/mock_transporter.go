// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nextdoor/pg-bifrost.git/transport/transporters/rabbitmq/transporter (interfaces: ConnectionGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	wabbit "github.com/NeowayLabs/wabbit"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConnectionGetter is a mock of ConnectionGetter interface
type MockConnectionGetter struct {
	ctrl     *gomock.Controller
	recorder *MockConnectionGetterMockRecorder
}

// MockConnectionGetterMockRecorder is the mock recorder for MockConnectionGetter
type MockConnectionGetterMockRecorder struct {
	mock *MockConnectionGetter
}

// NewMockConnectionGetter creates a new mock instance
func NewMockConnectionGetter(ctrl *gomock.Controller) *MockConnectionGetter {
	mock := &MockConnectionGetter{ctrl: ctrl}
	mock.recorder = &MockConnectionGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConnectionGetter) EXPECT() *MockConnectionGetterMockRecorder {
	return m.recorder
}

// GetConnection mocks base method
func (m *MockConnectionGetter) GetConnection(arg0 context.Context) (wabbit.Conn, error) {
	ret := m.ctrl.Call(m, "GetConnection", arg0)
	ret0, _ := ret[0].(wabbit.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnection indicates an expected call of GetConnection
func (mr *MockConnectionGetterMockRecorder) GetConnection(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnection", reflect.TypeOf((*MockConnectionGetter)(nil).GetConnection), arg0)
}
