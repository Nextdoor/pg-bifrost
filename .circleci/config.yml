version: 2

defaults: &defaults
  docker:
  - image: cimg/go:1.20.4

defaults_itests: &defaults_itests
  machine:
    enabled: true
    docker_layer_caching: true

jobs:
  build:
    <<: *defaults
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Run make build
        command: |
          # builds pg-bifrost in a docker container
          make docker_build

          # Save the docker container for re-use
          mkdir -p docker-cache
          docker save -o docker-cache/built-image.tar pg-bifrost:latest
    - persist_to_workspace:
        root: ~/
        paths:
          - project

  itests:
    <<: *defaults_itests
    parallelism: 6
    resource_class: xlarge
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run: cp -r /tmp/workspace/project/. .
    - run: |
        sudo docker load < docker-cache/built-image.tar
        
        # Pull binary out of docker image so we can do perf regression checks
        make docker_get_binary
    - run:
        name: Run integration tests in docker
        command: |
          git submodule sync
          git submodule update --init || (rm -fr .git/config .git/modules && git submodule deinit -f . && git submodule update --init)
          make itests
    - store_test_results:
        path: ./itests/test_output/

  publish_image:
    docker:
      - image: cimg/go:1.20.4
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run: cp -r /tmp/workspace/project/. .
      - run:
          name: "Publish Release on GitHub and Docker Hub"
          command: |
            if [ -z "$CIRCLE_TAG" ]
            then
              RELEASE_TAG="latest"
            else
              RELEASE_TAG=${CIRCLE_TAG}
            fi

            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
            docker load < docker-cache/built-image.tar
            docker tag pg-bifrost:latest "${HUB_REPO}:${RELEASE_TAG}"
            docker push "${HUB_REPO}:${RELEASE_TAG}"

workflows:
  version: 2
  default:
    jobs:
    - build:
        filters:
          branches:
            only: /.*/
          tags:
            only: /.*/

    - itests:
        requires: [build]
        filters:
          branches:
            only: /.*/
          tags:
            only: /.*/

    - publish_image:
        context: oss-publish
        requires: [itests]
        filters:
          branches:
            # Ignore everything except master
            ignore: /^(?!main).*$/
          tags:
            only: /[0-9\.]+/
