// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nextdoor/pg-bifrost.git/utils (interfaces: TimeSource)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTimeSource is a mock of TimeSource interface
type MockTimeSource struct {
	ctrl     *gomock.Controller
	recorder *MockTimeSourceMockRecorder
}

// MockTimeSourceMockRecorder is the mock recorder for MockTimeSource
type MockTimeSourceMockRecorder struct {
	mock *MockTimeSource
}

// NewMockTimeSource creates a new mock instance
func NewMockTimeSource(ctrl *gomock.Controller) *MockTimeSource {
	mock := &MockTimeSource{ctrl: ctrl}
	mock.recorder = &MockTimeSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTimeSource) EXPECT() *MockTimeSourceMockRecorder {
	return m.recorder
}

// DateString mocks base method
func (m *MockTimeSource) DateString() (string, string, string, string, string) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DateString")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(string)
	ret4, _ := ret[4].(string)
	return ret0, ret1, ret2, ret3, ret4
}

// DateString indicates an expected call of DateString
func (mr *MockTimeSourceMockRecorder) DateString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DateString", reflect.TypeOf((*MockTimeSource)(nil).DateString))
}

// UnixNano mocks base method
func (m *MockTimeSource) UnixNano() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnixNano")
	ret0, _ := ret[0].(int64)
	return ret0
}

// UnixNano indicates an expected call of UnixNano
func (mr *MockTimeSourceMockRecorder) UnixNano() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnixNano", reflect.TypeOf((*MockTimeSource)(nil).UnixNano))
}
