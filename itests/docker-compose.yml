version: '3'
services:
  postgres:
    container_name: postgres
    build: containers/postgres
    volumes:
    - "./tests/${TEST_NAME}/input:/input"
    environment:
    - POSTGRES_PASSWORD=pgbifrost
    networks:
    - net

  localstack:
    container_name: localstack
    image: localstack/localstack:0.14.0
    env_file:
    - "./containers/defaults.env"
    - "./tests/${TEST_NAME}/envfile.env"
    environment:
    - SERVICES=${TRANSPORT_SINK}
    ports:
    - ${LOCALSTACK_PORT}:${LOCALSTACK_PORT}
    restart: always
    networks:
    - net

  # data-poller needs localstack to be initialized to be able to call the local AWS service
  # This container is intended to be started first by the caller and then data-poller
  start-data-poller-dependencies:
    image: alpine:3.8
    depends_on:
    - localstack
    command: sleep 300

  data-poller:
    container_name: data-poller
    build: containers/data-poller
    depends_on:
    - start-data-poller-dependencies
    env_file:
    - "./containers/defaults.env"
    - "./tests/${TEST_NAME}/envfile.env"
    - "./contexts/${TRANSPORT_SINK}.env"
    networks:
      - net

  # bifrost needs postgres to be up, and for data-poller to have created sinks (e.g, s3 bucket, kinesis stream, etc)
  # This container is intended to be started first by the caller and then bifrost
  start-bifrost-dependencies:
    image: alpine:3.8
    depends_on:
    - postgres
    - localstack
    - data-poller
    command: sleep 300

  bifrost:
    container_name: bifrost
    image: pg-bifrost:latest
    depends_on:
    - start-bifrost-dependencies
    env_file:
    - "./containers/defaults.env"
    - "./tests/${TEST_NAME}/envfile.env"
    - "./contexts/${TRANSPORT_SINK}.env"
    networks:
      - net
    command: /pg-bifrost replicate ${TRANSPORT_SINK}

networks:
  net:
